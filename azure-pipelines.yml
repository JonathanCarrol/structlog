
# Don't have two build jobs for each pull request.
trigger:
- master

jobs:
  - job: 'Test'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Lint:
          tox.env: lint
          python.version: '3.7'
        Manifest:
          tox.env: manifest
          python.version: '3.7'

        py27-colorama:
          tox.env: py27-colorama
          python.version: '2.7'
        py27-greenlets:
          tox.env: py27-greenlets
          python.version: '2.7'
        py27-oldtwisted:
          tox.env: py27-oldtwisted
          python.version: '2.7'
        py27-threads:
          tox.env: py27-threads
          python.version: '2.7'
        py34-threads:
          tox.env: py34-threads
          python.version: '3.4'
        py35-threads:
          tox.env: py35-threads
          python.version: '3.5'
        py36-threads:
          tox.env: py36-threads
          python.version: '3.6'
        py37-colorama:
          tox.env: py37-colorama
          python.version: '3.7'
        py37-greenlets:
          tox.env: py37-greenlets
          python.version: '3.7'
        py37-oldtwisted:
          tox.env: py37-oldtwisted
          python.version: '3.7'
        py37-threads:
          tox.env: py37-threads
          python.version: '3.7'
        py38-threads:
          tox.env: py38-threads
          python.version: '3.8'
        pypy-colorama:
          tox.env: pypy-colorama
          python.version: pypy2
        pypy-greenlets:
          tox.env: pypy-greenlets
          python.version: pypy2
        pypy-oldtwisted:
          tox.env: pypy-oldtwisted
          python.version: pypy2
        pypy-threads:
          tox.env: pypy-threads
          python.version: pypy2
        pypy3-threads:
          tox.env: pypy3-threads
          python.version: pypy3

#        py38-greenlets:
#          tox.env: py38-greenlets
#          python.version: 3.8-dev
#        py38-threads:
#          tox.env: py38-threads
#          python.version: 3.8-dev

        Docs:
          python.version: '3.7'
          tox.env: docs
        PyPI-Description:
          python.version: '3.7'
          tox.env: pypi-description

    steps:
      - task: UsePythonVersion@0
        displayName: Get Python for Python utils.
        inputs:
          versionSpec: '3.7'
          addToPath: false
        name: pyTools

      - script: $(pyTools.pythonLocation)/bin/pip install --upgrade tox codecov
        displayName: Install Python-based tools.

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'
        condition: ne(variables['python.version'], '3.8')
        displayName: Get Python for tests.

      - script: |
          sudo add-apt-repository ppa:deadsnakes
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends python3.8-dev python3.8-distutils
        condition: eq(variables['python.version'], '3.8')
        displayName: Install Python 3.8 from the deadsnakes PPA.
      - script: '$(pyTools.pythonLocation)/bin/tox -e $(tox.env)'
        env:
          TOX_AP_TEST_EXTRAS: azure-pipelines
        displayName: run tox -e $(tox.env)

      - script: |
          '$(pyTools.pythonLocation)/bin/coverage combine'
          '$(pyTools.pythonLocation)/bin/codecov'
        env:
          CODECOV_TOKEN: $(codecov.token)
        displayName: Report Coverage
        condition: succeeded()
